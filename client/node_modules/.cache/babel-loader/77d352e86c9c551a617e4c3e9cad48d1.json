{"ast":null,"code":"var _jsxFileName = \"/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  username: '',\n  userId: '',\n  error: null,\n  loading: true\n}; // create context\n\nexport const GlobalContext = createContext(initialState); // provider \n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTxns() {\n    const {\n      userId\n    } = initialState;\n\n    if (userId) {\n      try {\n        const res = await axios.get(`/api/v1/txns/${userId}`);\n        dispatch({\n          type: 'GET_TXNS',\n          payload: res.data.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'GET_ERR',\n          payload: console.log(err)\n        });\n      }\n    }\n  }\n\n  async function deleteTransaction(id) {\n    const {\n      userId\n    } = initialState;\n\n    if (userId) {\n      try {\n        await axios.delete(`/api/v1/txns/${userId}/${id}`);\n        dispatch({\n          type: 'DELETE_TXN',\n          payload: id\n        });\n      } catch (err) {\n        dispatch({\n          type: 'GET_ERR',\n          payload: console.log(err)\n        });\n      }\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      userId\n    } = initialState;\n\n    if (userId) {\n      try {\n        const res = await axios.post(`/api/v1/txns/${userId}`, transaction, config);\n        dispatch({\n          type: 'ADD_TXN',\n          payload: res.data.data\n        });\n        console.log(res);\n      } catch (err) {\n        dispatch({\n          type: 'GET_ERR',\n          payload: console.log(err)\n        });\n      }\n    }\n  }\n\n  async function getUserId(username) {\n    try {\n      const res = await axios.get('api/v1/users');\n      const currentUser = res.data.data.filter(item => item.username === username)[0];\n      dispatch({\n        type: 'GET_USER_ID',\n        payload: currentUser\n      });\n      console.log(state);\n    } catch (error) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(error)\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      userId: state.userId,\n      username: state.username,\n      deleteTransaction,\n      addTransaction,\n      getTxns,\n      getUserId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default GlobalProvider;","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","axios","initialState","transactions","username","userId","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTxns","res","get","type","payload","data","err","console","log","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","getUserId","currentUser","filter","item"],"mappings":"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","sourcesContent":["import React , { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState = {\n    transactions: [],\n    username: '',\n    userId: '',\n    error: null,\n    loading: true\n};\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider \nexport const GlobalProvider = ({ children }) => {\n    const [state , dispatch ] = useReducer( AppReducer , initialState);\n\n    async function getTxns(){\n        const {userId} = initialState\n        if(userId){\n            try {\n                const res = await axios.get(`/api/v1/txns/${userId}`);\n                dispatch({\n                    type: 'GET_TXNS',\n                    payload: res.data.data\n                });\n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n            }\n        }\n    }\n\n    async function deleteTransaction(id){\n        const {userId} = initialState\n        if(userId){\n            try {\n                await axios.delete(`/api/v1/txns/${userId}/${id}`);\n                dispatch({\n                    type: 'DELETE_TXN',\n                    payload: id\n                });\n                \n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n            }\n        }\n    }\n\n    async function addTransaction(transaction){\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        const {userId} = initialState\n        if(userId){\n            try {\n                const res = await axios.post(`/api/v1/txns/${userId}`, transaction, config);\n                dispatch({\n                    type: 'ADD_TXN',\n                    payload: res.data.data\n                });\n                console.log(res)\n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n                \n            }\n        }\n    }\n\n    async function getUserId(username){\n        try {\n            const res = await axios.get('api/v1/users')\n            const currentUser = res.data.data.filter(item=> item.username === username)[0]\n            dispatch({\n                type: 'GET_USER_ID',\n                payload: currentUser\n            })\n            console.log(state);\n        } catch (error) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(error)\n            })\n        }\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            userId: state.userId,\n            username: state.username,\n            deleteTransaction,\n            addTransaction,\n            getTxns,\n            getUserId\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\nexport default GlobalProvider;"]},"metadata":{},"sourceType":"module"}