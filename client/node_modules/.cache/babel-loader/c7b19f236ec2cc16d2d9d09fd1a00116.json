{"ast":null,"code":"const bcrypt = require('bcryptjs');\n\nconst saltRounds = 10;\n\nfunction encrypt(plainTextPassword) {\n  return new Promise((resolve, reject) => {\n    bcrypt.hash(plainTextPassword, saltRounds, (err, res) => {\n      if (err) reject(err);else {\n        resolve(res);\n      }\n    });\n  });\n}\n\nfunction decrypt(plainTextPassword, hashedPassword) {\n  return new Promise((resolve, reject) => {\n    bcrypt.compare(plainTextPassword, hashedPassword, (err, res) => {\n      if (err) reject(err);else {\n        resolve(res);\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/utils/encrypt.js"],"names":["bcrypt","require","saltRounds","encrypt","plainTextPassword","Promise","resolve","reject","hash","err","res","decrypt","hashedPassword","compare"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAG,EAAnB;;AAEA,SAASC,OAAT,CAAiBC,iBAAjB,EAAmC;AACjC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAWC,MAAX,KAAoB;AACrCP,IAAAA,MAAM,CAACQ,IAAP,CAAYJ,iBAAZ,EAAgCF,UAAhC,EAA8C,CAACO,GAAD,EAAOC,GAAP,KAAa;AACzD,UAAID,GAAJ,EAASF,MAAM,CAACE,GAAD,CAAN,CAAT,KACK;AACHH,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD;AACF,KALD;AAOD,GARM,CAAP;AASD;;AAED,SAASC,OAAT,CAAiBP,iBAAjB,EAAqCQ,cAArC,EAAoD;AAClD,SAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAWC,MAAX,KAAsB;AACvCP,IAAAA,MAAM,CAACa,OAAP,CAAeT,iBAAf,EAAmCQ,cAAnC,EAAoD,CAACH,GAAD,EAAOC,GAAP,KAAa;AAC/D,UAAID,GAAJ,EAASF,MAAM,CAACE,GAAD,CAAN,CAAT,KACI;AACFH,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD;AACF,KALD;AAMD,GAPM,CAAP;AAQD","sourcesContent":["const bcrypt = require('bcryptjs')\nconst saltRounds = 10\n\nfunction encrypt(plainTextPassword){\n  return new Promise((resolve , reject)=>{\n    bcrypt.hash(plainTextPassword , saltRounds  , (err , res)=>{\n      if (err) reject(err)\n      else {\n        resolve(res)\n      }\n    });\n\n  })\n}\n\nfunction decrypt(plainTextPassword , hashedPassword){\n  return new Promise((resolve , reject) => {\n    bcrypt.compare(plainTextPassword , hashedPassword , (err , res)=>{\n      if (err) reject(err)\n      else{\n        resolve(res)\n      }\n    })\n  })\n}"]},"metadata":{},"sourceType":"module"}