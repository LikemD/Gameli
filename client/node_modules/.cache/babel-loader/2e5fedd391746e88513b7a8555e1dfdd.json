{"ast":null,"code":"const bcrypt = require('bcryptjs');\n\nconst saltRounds = 10;\nexport function encrypt(plainTextPassword) {\n  return new Promise((resolve, reject) => {\n    bcrypt.hash(plainTextPassword, saltRounds, null, (err, res) => {\n      if (err) reject(err);else {\n        resolve(res);\n      }\n    });\n  });\n}\nexport function decrypt(plainTextPassword, hashedPassword) {\n  bcrypt.compare(plainTextPassword, hashedPassword, (err, res) => {\n    return res;\n  });\n}","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/utils/encrypt.js"],"names":["bcrypt","require","saltRounds","encrypt","plainTextPassword","Promise","resolve","reject","hash","err","res","decrypt","hashedPassword","compare"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAG,EAAnB;AAEA,OAAO,SAASC,OAAT,CAAiBC,iBAAjB,EAAmC;AACxC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAWC,MAAX,KAAoB;AACrCP,IAAAA,MAAM,CAACQ,IAAP,CAAYJ,iBAAZ,EAAgCF,UAAhC,EAA6C,IAA7C,EAAoD,CAACO,GAAD,EAAOC,GAAP,KAAa;AAC/D,UAAID,GAAJ,EAASF,MAAM,CAACE,GAAD,CAAN,CAAT,KACK;AACHH,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD;AACF,KALD;AAOD,GARM,CAAP;AASD;AAED,OAAO,SAASC,OAAT,CAAiBP,iBAAjB,EAAqCQ,cAArC,EAAoD;AACzDZ,EAAAA,MAAM,CAACa,OAAP,CAAeT,iBAAf,EAAmCQ,cAAnC,EAAoD,CAACH,GAAD,EAAOC,GAAP,KAAa;AAC/D,WAAOA,GAAP;AACD,GAFD;AAGD","sourcesContent":["const bcrypt = require('bcryptjs')\nconst saltRounds = 10\n\nexport function encrypt(plainTextPassword){\n  return new Promise((resolve , reject)=>{\n    bcrypt.hash(plainTextPassword , saltRounds , null , (err , res)=>{\n      if (err) reject(err)\n      else {\n        resolve(res)\n      }\n    });\n\n  })\n}\n\nexport function decrypt(plainTextPassword , hashedPassword){\n  bcrypt.compare(plainTextPassword , hashedPassword , (err , res)=>{\n    return res\n  })\n}"]},"metadata":{},"sourceType":"module"}