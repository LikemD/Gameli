{"ast":null,"code":"var _jsxFileName = \"/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  firstName: '',\n  userId: '',\n  error: null,\n  loading: true,\n  step: 1\n}; // create context\n\nexport const GlobalContext = createContext(initialState); // provider \n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTxns() {\n    try {\n      const res = await axios.get(`/api/v1/txns`);\n      dispatch({\n        type: 'GET_TXNS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/txns/${id}`);\n      dispatch({\n        type: 'DELETE_TXN',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(`/api/v1/txns`, transaction, config);\n      dispatch({\n        type: 'ADD_TXN',\n        payload: res.data.data\n      });\n      console.log(res);\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function login(data) {\n    try {\n      const res = await axios.post('api/v1/users/login', data);\n      dispatch({\n        type: 'LOGIN',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(error)\n      });\n    }\n  }\n\n  async function dateFilter(sDate, eDate) {\n    const startDate = new Date(sDate);\n    const endDate = new Date(eDate);\n\n    try {\n      const res = await axios.get('api/v1/txns/sortDate', {\n        params: {\n          startDate,\n          endDate\n        }\n      });\n      dispatch({\n        type: 'DATE_FILTER',\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function register(data) {\n    if (data) {\n      try {\n        const res = await axios.post('api/v1/users/register', data);\n        if (res) console.log('success');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      userId: state.userId,\n      firstName: state.firstName,\n      step: state.step,\n      deleteTransaction,\n      addTransaction,\n      getTxns,\n      login,\n      register,\n      dateFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default GlobalProvider;","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","axios","initialState","transactions","firstName","userId","error","loading","step","GlobalContext","GlobalProvider","children","state","dispatch","getTxns","res","get","type","payload","data","err","console","log","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","login","dateFilter","sDate","eDate","startDate","Date","endDate","params","register"],"mappings":"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","sourcesContent":["import React , { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState = {\n    transactions: [],\n    firstName: '',\n    userId: '',\n    error: null,\n    loading: true,\n    step: 1\n};\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider \nexport const GlobalProvider = ({ children }) => {\n    const [state , dispatch ] = useReducer( AppReducer , initialState);\n\n    async function getTxns(){\n            try {\n                const res = await axios.get(`/api/v1/txns`);\n                dispatch({\n                    type: 'GET_TXNS',\n                    payload: res.data.data\n                });\n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n            }\n        \n    }\n\n    async function deleteTransaction(id){\n            try {\n                await axios.delete(`/api/v1/txns/${id}`);\n                dispatch({\n                    type: 'DELETE_TXN',\n                    payload: id\n                });\n                \n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n            }\n    }\n\n    async function addTransaction(transaction){\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n            try {\n                const res = await axios.post(`/api/v1/txns`, transaction, config);\n                dispatch({\n                    type: 'ADD_TXN',\n                    payload: res.data.data\n                });\n                console.log(res)\n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n                \n            }\n    }\n\n    async function login(data){\n        try {\n            const res = await axios.post('api/v1/users/login' , data)\n            dispatch({\n                type: 'LOGIN',\n                payload: res.data.data\n            })\n        } catch (error) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(error)\n            })\n        }\n    }\n\n    async function dateFilter(sDate , eDate){\n        const startDate = new Date(sDate)\n        const endDate = new Date(eDate)\n\n        try {\n           const res = await axios.get('api/v1/txns/sortDate' , {params: {startDate , endDate}})\n            dispatch({\n                type: 'DATE_FILTER',\n                payload: res.data.data\n            })      \n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function register(data){\n        if(data){\n            try {\n                const res = await axios.post('api/v1/users/register', data);\n                if(res) console.log('success')\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            userId: state.userId,\n            firstName: state.firstName,\n            step: state.step,\n            deleteTransaction,\n            addTransaction,\n            getTxns,\n            login,\n            register,\n            dateFilter\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\nexport default GlobalProvider;"]},"metadata":{},"sourceType":"module"}