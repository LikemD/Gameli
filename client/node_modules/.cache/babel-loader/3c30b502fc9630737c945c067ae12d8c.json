{"ast":null,"code":"var _jsxFileName = \"/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  firstName: '',\n  username: '',\n  password: '',\n  userId: '',\n  error: null,\n  loading: true\n}; // create context\n\nexport const GlobalContext = createContext(initialState); // provider \n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTxns() {\n    try {\n      const res = await axios.get(`/api/v1/txns`);\n      dispatch({\n        type: 'GET_TXNS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/txns/${id}`);\n      dispatch({\n        type: 'DELETE_TXN',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(`/api/v1/txns`, transaction, config);\n      dispatch({\n        type: 'ADD_TXN',\n        payload: res.data.data\n      });\n      console.log(res);\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function login(data) {\n    try {\n      const res = await axios.post('api/v1/users/login', data);\n      console.log(res); //const currentUser = res.data.data.filter(item=> item.username === username)[0]\n\n      dispatch({\n        type: 'LOGIN',\n        payload: res.data.data\n      });\n      console.log(state);\n    } catch (error) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(error)\n      });\n    }\n  }\n\n  async function dateFilter(date) {\n    const startDate = new Date(date);\n    const year = startDate.getFullYear();\n    const month = startDate.getMonth();\n\n    try {\n      const res = await axios.get('api/v1/txns/sortDate', {\n        params: {\n          startDate,\n          endDate: new Date(year, month + 1)\n        }\n      });\n      dispatch({\n        type: 'DATE_FILTER',\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function register(data) {\n    if (data) {\n      try {\n        const res = await axios.post('api/v1/users/register', data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      userId: state.userId,\n      firstName: state.firstName,\n      username: state.username,\n      deleteTransaction,\n      addTransaction,\n      getTxns,\n      login,\n      register,\n      dateFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default GlobalProvider;","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","axios","initialState","transactions","firstName","username","password","userId","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTxns","res","get","type","payload","data","err","console","log","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","login","dateFilter","date","startDate","Date","year","getFullYear","month","getMonth","params","endDate","register"],"mappings":"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","sourcesContent":["import React , { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState = {\n    transactions: [],\n    firstName: '',\n    username: '',\n    password: '',\n    userId: '',\n    error: null,\n    loading: true\n};\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider \nexport const GlobalProvider = ({ children }) => {\n    const [state , dispatch ] = useReducer( AppReducer , initialState);\n\n    async function getTxns(){\n            try {\n                const res = await axios.get(`/api/v1/txns`);\n                dispatch({\n                    type: 'GET_TXNS',\n                    payload: res.data.data\n                });\n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n            }\n        \n    }\n\n    async function deleteTransaction(id){\n            try {\n                await axios.delete(`/api/v1/txns/${id}`);\n                dispatch({\n                    type: 'DELETE_TXN',\n                    payload: id\n                });\n                \n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n            }\n    }\n\n    async function addTransaction(transaction){\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n            try {\n                const res = await axios.post(`/api/v1/txns`, transaction, config);\n                dispatch({\n                    type: 'ADD_TXN',\n                    payload: res.data.data\n                });\n                console.log(res)\n            } catch (err) {\n                dispatch({\n                    type: 'GET_ERR',\n                    payload: console.log(err)\n                });\n                \n            }\n    }\n\n    async function login(data){\n        try {\n            const res = await axios.post('api/v1/users/login' , data)\n            console.log(res);\n            //const currentUser = res.data.data.filter(item=> item.username === username)[0]\n            dispatch({\n                type: 'LOGIN',\n                payload: res.data.data\n            })\n            console.log(state);\n        } catch (error) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(error)\n            })\n        }\n    }\n\n    async function dateFilter(date){\n        const startDate = new Date(date)\n        const year = startDate.getFullYear()\n        const month = startDate.getMonth()\n        try {\n           const res = await axios.get('api/v1/txns/sortDate' , {params: {startDate , endDate: new Date(year , month + 1)}})\n            dispatch({\n                type: 'DATE_FILTER',\n                payload: res.data.data\n            })      \n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function register(data){\n        if(data){\n            try {\n                const res = await axios.post('api/v1/users/register', data);\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            userId: state.userId,\n            firstName: state.firstName,\n            username: state.username,\n            deleteTransaction,\n            addTransaction,\n            getTxns,\n            login,\n            register,\n            dateFilter\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\nexport default GlobalProvider;"]},"metadata":{},"sourceType":"module"}