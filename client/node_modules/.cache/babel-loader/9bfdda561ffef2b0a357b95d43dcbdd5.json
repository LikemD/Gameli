{"ast":null,"code":"var _jsxFileName = \"/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  users: [],\n  userId: '',\n  error: null,\n  loading: true\n}; // create context\n\nexport const GlobalContext = createContext(initialState); // provider \n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTxns() {\n    try {\n      const res = await axios.get('/api/v1/txns');\n      dispatch({\n        type: 'GET_TXNS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/txns/${id}`);\n      dispatch({\n        type: 'DELETE_TXN',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/txns', transaction, config);\n      dispatch({\n        type: 'ADD_TXN',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(err)\n      });\n    }\n  }\n\n  async function getUserId(username) {\n    try {\n      const res = await axios.get('api/v1/users');\n      const currentUserID = res;\n      dispatch({\n        type: 'GET_USER_ID',\n        payload: currentUserID\n      });\n      console.log(state.userId);\n    } catch (error) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: console.log(error)\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      deleteTransaction,\n      addTransaction,\n      getTxns,\n      getUserId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default GlobalProvider;","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","axios","initialState","transactions","users","userId","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTxns","res","get","type","payload","data","err","console","log","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","getUserId","username","currentUserID"],"mappings":"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","sourcesContent":["import React , { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState = {\n    transactions: [],\n    users: [],\n    userId: '',\n    error: null,\n    loading: true\n};\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider \nexport const GlobalProvider = ({ children }) => {\n    const [state , dispatch ] = useReducer( AppReducer , initialState);\n\n    async function getTxns(){\n        try {\n            const res = await axios.get('/api/v1/txns');\n            dispatch({\n                type: 'GET_TXNS',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(err)\n            });\n        }\n    }\n\n    async function deleteTransaction(id){\n        try {\n            await axios.delete(`/api/v1/txns/${id}`);\n            dispatch({\n                type: 'DELETE_TXN',\n                payload: id\n            });\n            \n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(err)\n            });\n        }\n    }\n\n    async function addTransaction(transaction){\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        try {\n            const res = await axios.post('/api/v1/txns', transaction, config);\n            dispatch({\n                type: 'ADD_TXN',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(err)\n            });\n            \n        }\n    }\n\n    async function getUserId(username){\n        try {\n            const res = await axios.get('api/v1/users')\n            const currentUserID = res\n            dispatch({\n                type: 'GET_USER_ID',\n                payload: currentUserID \n            })\n            console.log(state.userId)\n        } catch (error) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(error)\n            })\n        }\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            deleteTransaction,\n            addTransaction,\n            getTxns,\n            getUserId\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\nexport default GlobalProvider;"]},"metadata":{},"sourceType":"module"}