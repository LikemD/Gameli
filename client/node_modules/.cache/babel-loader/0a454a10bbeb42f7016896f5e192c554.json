{"ast":null,"code":"var _jsxFileName = \"/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport { axios } from 'axios';\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // create context\n\nexport const GlobalContext = createContext(initialState); // provider \n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTxns() {\n    try {\n      const res = await axios.get('/api/v1/txns');\n      dispatch({\n        type: 'GET_TXNS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'GET_ERR',\n        payload: err.res.data.error\n      });\n    }\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TXN',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TXN',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      deleteTransaction,\n      addTransaction,\n      getTxns\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default GlobalProvider;","map":{"version":3,"sources":["/Users/likemdunyo/Desktop/Gameli/client/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTxns","res","get","type","payload","data","err","deleteTransaction","id","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,UAAjB,EAA6BC,aAA7B,QAAkD,OAAlD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,OAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB,C,CAKA;;AACA,OAAO,MAAMC,aAAa,GAAGP,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,KAAD,EAASC,QAAT,IAAsBZ,UAAU,CAAEE,UAAF,EAAeE,YAAf,CAAtC;;AAEA,iBAAeS,OAAf,GAAwB;AACpB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,cAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,GAAP,EAAY;AACVP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAEE,GAAG,CAACL,GAAJ,CAAQI,IAAR,CAAaZ;AAFjB,OAAD,CAAR;AAIH;AACJ;;AAED,WAASc,iBAAT,CAA2BC,EAA3B,EAA8B;AAC1BT,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,OAAO,EAAEI;AAFJ,KAAD,CAAR;AAIH;;AAED,WAASC,cAAT,CAAwBC,WAAxB,EAAoC;AAChCX,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,SADD;AAELC,MAAAA,OAAO,EAAEM;AAFJ,KAAD,CAAR;AAIH;;AAED,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BlB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADO;AAE3BC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFc;AAG3BC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHY;AAI3Ba,MAAAA,iBAJ2B;AAK3BE,MAAAA,cAL2B;AAM3BT,MAAAA;AAN2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKH,QARL,CADJ;AAYH,CA7CM;AA8CP,eAAeD,cAAf","sourcesContent":["import React , { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport { axios } from 'axios';\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n};\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider \nexport const GlobalProvider = ({ children }) => {\n    const [state , dispatch ] = useReducer( AppReducer , initialState);\n\n    async function getTxns(){\n        try {\n            const res = await axios.get('/api/v1/txns');\n\n            dispatch({\n                type: 'GET_TXNS',\n                payload: res.data.data\n            })\n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: err.res.data.error\n            })\n        }\n    }\n\n    function deleteTransaction(id){\n        dispatch({\n            type: 'DELETE_TXN',\n            payload: id\n        })\n    }\n\n    function addTransaction(transaction){\n        dispatch({\n            type: 'ADD_TXN',\n            payload: transaction\n        })\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            deleteTransaction,\n            addTransaction,\n            getTxns\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\nexport default GlobalProvider;"]},"metadata":{},"sourceType":"module"}