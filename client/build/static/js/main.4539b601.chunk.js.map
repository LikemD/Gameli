{"version":3,"sources":["components/Header.js","utils/formats.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/ProfitLoss.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","Component","numberWithCommas","x","toString","replace","state","action","type","loading","transactions","payload","filter","txn","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","console","log","id","delete","transaction","config","headers","post","Provider","value","deleteTransaction","addTransaction","getTxns","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","ProfitLoss","income","expenses","className","Transaction","sign","clname","key","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","uuid","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4539b601.chunk.js","sourcesContent":["import React , { Component } from 'react';\n\nexport default class Header extends Component {\n    render(){\n        return (\n            <>\n                <h2>Gameli Expense Tracker</h2>\n            </>\n        )\n    }\n}","export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","export default (state , action) => {\n        switch (action.type) {\n                case 'GET_TXNS':\n                        return{\n                                ...state,\n                                loading: false,\n                                transactions: action.payload\n                        }\n                case 'DELETE_TXN':\n                        return{\n                                ...state,\n                                transactions: state.transactions.filter(txn => txn._id !== action.payload)\n                        }\n                case 'ADD_TXN':\n                        return{\n                                ...state,\n                                transactions: [...state.transactions , action.payload]\n                        }\n                case 'GET_ERR':\n                        return{\n                                ...state,\n                                error: action.payload\n                        }\n            default:\n                return state;\n        }\n}","import React , { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n};\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider \nexport const GlobalProvider = ({ children }) => {\n    const [state , dispatch ] = useReducer( AppReducer , initialState);\n\n    async function getTxns(){\n        try {\n            const res = await axios.get('/api/v1/txns');\n            dispatch({\n                type: 'GET_TXNS',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(err)\n            });\n        }\n    }\n\n    async function deleteTransaction(id){\n        try {\n            await axios.delete(`/api/v1/txns/${id}`);\n            dispatch({\n                type: 'DELETE_TXN',\n                payload: id\n            });\n            \n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(err)\n            });\n        }\n    }\n\n    async function addTransaction(transaction){\n        const config = {\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }\n        try {\n            const res = await axios.post('/api/v1/txns', transaction, config);\n            dispatch({\n                type: 'ADD_TXN',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'GET_ERR',\n                payload: console.log(err)\n            });\n            \n        }\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            deleteTransaction,\n            addTransaction,\n            getTxns\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\nexport default GlobalProvider;","import React , { useContext } from 'react';\nimport { numberWithCommas } from '../utils/formats';\n\n\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n    const amounts  = transactions.map( transaction => transaction.amount );\n    const total = amounts.reduce((acc,item) => (acc += item),0).toFixed(2); \n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1 id='balance'>${numberWithCommas(total)}</h1>\n        </>\n        \n    )\n}\n\nexport default Balance;","import React, {useContext} from 'react';\nimport { numberWithCommas } from '../utils/formats';\n\n\nimport { GlobalContext } from '../context/GlobalState';\n\nconst ProfitLoss = () => {\n    const { transactions } = useContext(GlobalContext);\n    const amount = transactions.map(transaction => transaction.amount);\n    \n    const income = amount\n        .filter(item => item > 0)\n        .reduce((acc,item) => (acc += item),0)\n        .toFixed(2);\n\n\n    const expenses = ( amount\n        .filter(item => item < 0)\n        .reduce((acc,item) => (acc += item),0) * -1\n    ).toFixed(2);\n\n    return (\n        <div className='inc-exp-container'>\n            <div>\n                <h4>Income</h4>\n                <p className='money plus' id='money-plus'> +${numberWithCommas(income)} </p>\n            </div>\n            <div>\n                <h4>Expenses</h4>\n                <p className='money minus' id='money-minus'> -${numberWithCommas(expenses)} </p>\n            </div>\n        </div>\n    )\n};\n\nexport default ProfitLoss;","import React , { useContext }from 'react';\nimport { numberWithCommas } from '../utils/formats';\n\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Transaction = ({transaction}) => {\n    const sign = transaction.amount < 0 ? '-' : '+';\n    const clname = transaction.amount < 0 ? 'minus' : 'plus';\n\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    return(\n        <li className={clname} key={transaction._id}> {transaction.text} \n            <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span><button className='delete-btn' onClick={()=> deleteTransaction(transaction._id)}>&times;</button>\n        </li>\n    )\n}\n\nexport default Transaction;","import React , { useContext , useEffect} from 'react';\n\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\nconst TransactionList = () => {\n\n    const { transactions , getTxns }  = useContext(GlobalContext);\n\n  useEffect(() => {\n    getTxns();\n        },[ ]) ;\n\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul id='list' className='list'>\n                {transactions.map((transaction) => (<Transaction key={transaction._id} transaction={transaction}/>))}\n            </ul>\n        </>\n    )\n}\n\nexport default TransactionList;","import React , { useState , useContext } from 'react';\nimport {v4 as uuid} from 'uuid';\n\n\nimport { GlobalContext } from '../context/GlobalState';\n\nconst AddTransaction = () => {\n    const [text , setText] = useState('');\n    const [amount , setAmount ] = useState(0);\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: uuid(),\n            text,\n            amount: +amount\n        }\n\n        addTransaction(newTransaction);\n        setText('');\n        setAmount(0);\n    }\n\n    return (\n        <div>\n            <h3>Add New Transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className='form-control'>\n                    <label htmlFor='text'>Text</label>\n                    <input type='text' value={text} onChange={(e) => setText(e.target.value)} placeholder='Enter Text' />\n                </div>\n                <div className='form-control'>\n                    <label htmlFor='amount'>Amount <br/>\n                    (Negative - expense , positive - income)\n                    </label>\n                    <input type='number' value={amount} onChange={(e) => setAmount(e.target.value)} placeholder='Enter Amount' />\n                </div>\n                <button className='btn'>Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddTransaction;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport ProfitLoss from './components/ProfitLoss';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport GlobalProvider from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div id='container'>\n        <Balance />\n        <ProfitLoss />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}